"""
–ú–æ–¥—É–ª—å —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
"""

import re

def format_price(price: float) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ü–µ–Ω—É –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    """
    if price == int(price):
        return f"{int(price):,}".replace(",", " ") + " —Ä—É–±."
    else:
        return f"{price:,.2f}".replace(",", " ").replace(".", ",") + " —Ä—É–±."


def format_total_price(price: float, quantity: int) -> tuple[str, str]:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ —Å —É—á–µ—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    """
    price_str = format_price(price)
    
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    total_price = price * quantity
    
    if total_price == int(total_price):
        total_price_str = f"{int(total_price):,}".replace(",", " ") + " —Ä—É–±."
    else:
        total_price_str = f"{total_price:,.2f}".replace(",", " ").replace(".", ",") + " —Ä—É–±."
    
    return price_str, total_price_str


def format_phone_number(phone):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç +7XXXXXXXXXX
    """
    if not phone:
        return None
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ —Ü–∏—Ñ—Ä—ã –∏–∑ —Å—Ç—Ä–æ–∫–∏
    digits = re.sub(r'\D', '', phone)

    if len(digits) == 11:
        if digits.startswith('8') or digits.startswith('7'):
            return f"+7{digits[1:]}"
    elif len(digits) == 10:
        return f"+7{digits}"
    
    if digits:
        return f"+{digits}"
    
    return None

def format_order_details(order, items=None):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    
    Args:
        order: –û–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        items: –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∑–∞–∫–∞–∑–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞–∫–∞–∑–∞
    """
    result = [
        f"üßæ <b>–ó–∞–∫–∞–∑ #{order.id}</b>",
        f"üìÖ –î–∞—Ç–∞: {order.created_at.strftime('%d.%m.%Y %H:%M')}",
        f"üí∞ –°—É–º–º–∞: {format_price(order.total_amount)}",
        f"üì¶ –°—Ç–∞—Ç—É—Å: {order.status}"
    ]
    
    if order.payment_status:
        result.append(f"üí≥ –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {order.payment_status}")
    
    if order.address:
        result.append(f"üè† –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order.address}")
    
    if items:
        result.append("\nüìã <b>–¢–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑–µ:</b>")
        for i, item in enumerate(items, 1):
            price_str, total_str = format_total_price(item.price, item.quantity)
            result.append(f"{i}. {item.product_name} - {item.quantity} —à—Ç. x {price_str} = {total_str}")
    
    return "\n".join(result) 