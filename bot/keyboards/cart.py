from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from utils.formatters import format_price


def get_cart_keyboard(cart_items, total_price):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã"""
    keyboard = InlineKeyboardBuilder()

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ
    for cart_item, product in cart_items:
        keyboard.button(
            text=f"{product.name} ({cart_item.quantity} —à—Ç.)",
            callback_data=f"cart_item_{cart_item.id}"
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã
    keyboard.button(
        text="üßπ –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É",
        callback_data="cart_clear"
    )

    keyboard.button(
        text=f"üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑ ({format_price(total_price)})",
        callback_data="checkout"
    )

    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    keyboard.button(
        text="üîô –ù–∞–∑–∞–¥",
        callback_data="start"
    )

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É –≤ 1 –∫–Ω–æ–ø–∫—É
    keyboard.adjust(1)

    return keyboard.as_markup()


def get_cart_item_keyboard(cart_item, quantity=None):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω–µ"""
    builder = InlineKeyboardBuilder()
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–ª–∏ –±–µ—Ä–µ–º –∏–∑ –æ–±—ä–µ–∫—Ç–∞
    qty = quantity if quantity is not None else cart_item.quantity
    
    # –ö–Ω–æ–ø–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    builder.row(
        InlineKeyboardButton(text="‚ûñ", callback_data=f"cart_decrease_{cart_item.id}"),
        InlineKeyboardButton(text=f"{qty} —à—Ç.", callback_data="cart_quantity"),
        InlineKeyboardButton(text="‚ûï", callback_data=f"cart_increase_{cart_item.id}")
    )

    builder.button(
        text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å",
        callback_data=f"cart_remove_{cart_item.id}"
    )

    builder.button(
        text="üîô –ù–∞–∑–∞–¥ –∫ –∫–æ—Ä–∑–∏–Ω–µ",
        callback_data="cart"
    )

    builder.adjust(3, 1, 1)
    
    return builder.as_markup()


def get_cart_empty_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—É—Å—Ç–æ–π –∫–æ—Ä–∑–∏–Ω—ã"""
    builder = InlineKeyboardBuilder()

    builder.button(
        text="üìã –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥",
        callback_data="catalog"
    )

    builder.button(
        text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        callback_data="start"
    )

    builder.adjust(1)
    
    return builder.as_markup()


def get_checkout_keyboard(edit_mode=False, has_delivery_info=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞"""
    builder = InlineKeyboardBuilder()
    
    if has_delivery_info:
        # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ –¥–æ—Å—Ç–∞–≤–∫–µ —É–∂–µ –µ—Å—Ç—å
        if edit_mode:
            builder.button(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                callback_data="checkout_confirm"
            )
        else:
            # –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
            builder.button(
                text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ",
                callback_data="checkout_edit"
            )
            
            builder.button(
                text="üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ",
                callback_data="checkout_payment"
            )
    else:
        builder.button(
            text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
            callback_data="checkout_cancel"
        )

    builder.button(
        text="üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É",
        callback_data="cart"
    )

    builder.adjust(1)
    
    return builder.as_markup()
